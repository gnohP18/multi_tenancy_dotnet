// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tenant_service.Infrastructure.Database;

#nullable disable

namespace tenant_service.Migrations
{
    [DbContext(typeof(LandlordContext))]
    partial class LandlordContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("tenant_service.Core.Entities.Landlord.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiTenantId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("api_tenant_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("domain");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tenant_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_tenants");

                    b.ToTable("tenants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiTenantId = "dcDxl607BQHvvdoH0AkqfajnZEhm78uB",
                            CreatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6200),
                            Domain = "shoes-store",
                            IsDeleted = false,
                            Note = "This is an example tenant",
                            TenantId = "49ef20c8-5b7d-44f8-bd15-1f7cc225e692",
                            UpdatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6230)
                        },
                        new
                        {
                            Id = 2,
                            ApiTenantId = "gdW9acf9PpVtUoWKgxRv6VPdbuaPEMdV",
                            CreatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6310),
                            Domain = "shuba-grocery",
                            IsDeleted = false,
                            Note = "This is an example tenant",
                            TenantId = "2a7bcc6f-4baf-4e6a-95b6-846ddddb4919",
                            UpdatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6310)
                        },
                        new
                        {
                            Id = 3,
                            ApiTenantId = "lZXUrIcS3AwsddpeQFoJvzurBX7Pb30o",
                            CreatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6320),
                            Domain = "max-toys-store",
                            IsDeleted = false,
                            Note = "This is an example tenant",
                            TenantId = "8d34c62c-a23b-4902-9644-550b686b36dc",
                            UpdatedAt = new DateTime(2024, 12, 13, 23, 25, 43, 833, DateTimeKind.Local).AddTicks(6320)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
