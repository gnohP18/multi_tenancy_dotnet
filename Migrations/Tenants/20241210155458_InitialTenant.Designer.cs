// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tenant_service.Infrastructure.Database;

#nullable disable

namespace tenant_service.Migrations.Tenants
{
    [DbContext(typeof(CreatingContext))]
    [Migration("20241210155458_InitialTenant")]
    partial class InitialTenant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("tenant_service.Domain.Models.Tenant.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6490),
                            IsDeleted = false,
                            Name = "Uzumaki Naruto",
                            UpdatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6490)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6490),
                            IsDeleted = false,
                            Name = "Hayate Kakashi",
                            UpdatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6500)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6500),
                            IsDeleted = false,
                            Name = "Uchiha Madara",
                            UpdatedAt = new DateTime(2024, 12, 10, 22, 54, 58, 473, DateTimeKind.Local).AddTicks(6500)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
